{"ast":null,"code":"// import React from 'react';\n// import Axios from 'axios';\n// function Posts(props) {\n//   // handleUpvote = (post, key) => {\n//   //   this.props.firebase.ref('posts/' + key).set({\n//   //     title: post.title,\n//   //     upvote: post.upvote + 1,\n//   //     downvote: post.downvote\n//   //   });\n//   // }\n//   handleUpvote = event => {\n//     event.preventDefault(); \n//     console.log(\"upvote!\"); \n//     Axios.post(\"/api/forum\", {\n//         name: this.state.name, \n//         posttitle: this.state.posttitle, \n//         postbody: this.state.postbody,\n//         upvote: this.state.upvote + 1, \n//         downvote: this.state.downvote \n//     });\n//   }\n//   // handleDownvote = (post, key) => {\n//   //   this.props.firebase.ref('posts/' + key).set({\n//   //     title: post.title,\n//   //     upvote: post.upvote,\n//   //     downvote: post.downvote + 1\n//   //   });\n//   // }\n//   handleDownvote = event => {\n//     event.preventDefault();\n//     console.log(\"downvote!\"); \n//     Axios.post(\"/api/forum\", {\n//       name: this.state.name, \n//       posttitle: this.state.posttitle, \n//       postbody: this.state.postbody, \n//       upvote: this.state.upvote, \n//       downvote: this.state.downvote + 1\n//     });\n//   }\n//   // render() {\n//   //   let posts = this.props.posts;\n//   //   let _this = this;\n//   //   if (!posts) {\n//   //     return false;\n//   //   }\n//   //   if (this.props.loading) {\n//   //     return (\n//   //       <div>\n//   //         Loading...\n//   //       </div>\n//   //     );\n//   //   }\n//     return (\n//       <div className=\"Posts\">\n//         { Object.keys(posts).map(function(key) {\n//             return (\n//               <div key={key}>\n//                 <div>Name: { posts[key].name }</div>\n//                 <div>Title: { posts[key].posttitle }</div>\n//                 <div>Post: { posts[key].postbody }</div>\n//                 <div>Upvotes: { posts[key].upvote }</div>\n//                 <div>Downvotes: { posts[key].downvote }</div>\n//                 <div>\n//                   <button\n//                     onClick={ _this.handleUpvote.bind(this, posts[key], key) }\n//                     type=\"button\"\n//                   >\n//                     Upvote\n//                   </button>\n//                   <button\n//                     onClick={ _this.handleDownvote.bind(this, posts[key], key) }\n//                     type=\"button\"\n//                   >\n//                     Downvote\n//                   </button>\n//                 </div>\n//               </div>\n//             );\n//         })}\n//       </div>\n//     );\n//   }\n// }\n// export default Posts;\nimport React from\"react\";import{response}from\"express\";function Posts(props){return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h1\",null,\"Welcome to the GitPets Forum!\"),/*#__PURE__*/React.createElement(\"table\",{className:\"forum-table\"},/*#__PURE__*/React.createElement(\"thead\",{className:\"thead-dark\"},/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"th\",{scope:\"col\"},\"Author\"),/*#__PURE__*/React.createElement(\"th\",{scope:\"col\"},\"Title\"),/*#__PURE__*/React.createElement(\"th\",{scope:\"col\"},\"Post\"),/*#__PURE__*/React.createElement(\"th\",{scope:\"col\"},\"Upvote\"),/*#__PURE__*/React.createElement(\"th\",{scope:\"col\"},\"Downvote\"))),/*#__PURE__*/React.createElement(\"tbody\",null,props.data.map(function(response){return/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,response.name),/*#__PURE__*/React.createElement(\"td\",null,response.posttitle),/*#__PURE__*/React.createElement(\"td\",null,response.postboby),/*#__PURE__*/React.createElement(\"td\",null,response.upvote),/*#__PURE__*/React.createElement(\"td\",null,response.downvote));}))));}export default Posts;","map":{"version":3,"sources":["/Users/napsche/Desktop/Class/Project3/GitPets/client/src/components/Posts/posts.js"],"names":["React","response","Posts","props","data","map","name","posttitle","postboby","upvote","downvote"],"mappings":"AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,QAAT,KAAyB,SAAzB,CAEA,QAASC,CAAAA,KAAT,CAAeC,KAAf,CAAsB,CACpB,mBACE,4CACE,8DADF,cAIE,6BAAO,SAAS,CAAC,aAAjB,eACE,6BAAO,SAAS,CAAC,YAAjB,eACE,2CACE,0BAAI,KAAK,CAAC,KAAV,WADF,cAEE,0BAAI,KAAK,CAAC,KAAV,UAFF,cAGE,0BAAI,KAAK,CAAC,KAAV,SAHF,cAIE,0BAAI,KAAK,CAAC,KAAV,WAJF,cAKE,0BAAI,KAAK,CAAC,KAAV,aALF,CADF,CADF,cAUE,iCAEIA,KAAK,CAACC,IAAN,CAAWC,GAAX,CAAe,SAAAJ,QAAQ,CAAI,CACzB,mBACE,2CACE,8BAAKA,QAAQ,CAACK,IAAd,CADF,cAEE,8BAAKL,QAAQ,CAACM,SAAd,CAFF,cAGE,8BAAKN,QAAQ,CAACO,QAAd,CAHF,cAIE,8BAAKP,QAAQ,CAACQ,MAAd,CAJF,cAKE,8BAAKR,QAAQ,CAACS,QAAd,CALF,CADF,CASD,CAVD,CAFJ,CAVF,CAJF,CADF,CAiCD,CAED,cAAeR,CAAAA,KAAf","sourcesContent":["// import React from 'react';\n// import Axios from 'axios';\n\n// function Posts(props) {\n\n//   // handleUpvote = (post, key) => {\n//   //   this.props.firebase.ref('posts/' + key).set({\n//   //     title: post.title,\n//   //     upvote: post.upvote + 1,\n//   //     downvote: post.downvote\n//   //   });\n//   // }\n\n//   handleUpvote = event => {\n//     event.preventDefault(); \n//     console.log(\"upvote!\"); \n//     Axios.post(\"/api/forum\", {\n//         name: this.state.name, \n//         posttitle: this.state.posttitle, \n//         postbody: this.state.postbody,\n//         upvote: this.state.upvote + 1, \n//         downvote: this.state.downvote \n//     });\n//   }\n  \n//   // handleDownvote = (post, key) => {\n//   //   this.props.firebase.ref('posts/' + key).set({\n//   //     title: post.title,\n//   //     upvote: post.upvote,\n//   //     downvote: post.downvote + 1\n//   //   });\n//   // }\n\n//   handleDownvote = event => {\n//     event.preventDefault();\n//     console.log(\"downvote!\"); \n//     Axios.post(\"/api/forum\", {\n//       name: this.state.name, \n//       posttitle: this.state.posttitle, \n//       postbody: this.state.postbody, \n//       upvote: this.state.upvote, \n//       downvote: this.state.downvote + 1\n//     });\n//   }\n\n//   // render() {\n//   //   let posts = this.props.posts;\n//   //   let _this = this;\n  \n//   //   if (!posts) {\n//   //     return false;\n//   //   }\n  \n//   //   if (this.props.loading) {\n//   //     return (\n//   //       <div>\n//   //         Loading...\n//   //       </div>\n//   //     );\n//   //   }\n  \n//     return (\n//       <div className=\"Posts\">\n//         { Object.keys(posts).map(function(key) {\n//             return (\n//               <div key={key}>\n//                 <div>Name: { posts[key].name }</div>\n//                 <div>Title: { posts[key].posttitle }</div>\n//                 <div>Post: { posts[key].postbody }</div>\n//                 <div>Upvotes: { posts[key].upvote }</div>\n//                 <div>Downvotes: { posts[key].downvote }</div>\n//                 <div>\n//                   <button\n//                     onClick={ _this.handleUpvote.bind(this, posts[key], key) }\n//                     type=\"button\"\n//                   >\n//                     Upvote\n//                   </button>\n//                   <button\n//                     onClick={ _this.handleDownvote.bind(this, posts[key], key) }\n//                     type=\"button\"\n//                   >\n//                     Downvote\n//                   </button>\n//                 </div>\n//               </div>\n//             );\n//         })}\n//       </div>\n//     );\n//   }\n// }\n\n// export default Posts;\n\nimport React from \"react\"; \nimport { response } from \"express\";\n\nfunction Posts(props) {\n  return (\n    <div>\n      <h1>\n        Welcome to the GitPets Forum!\n      </h1>\n      <table className=\"forum-table\">\n        <thead className=\"thead-dark\">\n          <tr>\n            <th scope=\"col\">Author</th>\n            <th scope=\"col\">Title</th>\n            <th scope=\"col\">Post</th>\n            <th scope=\"col\">Upvote</th>\n            <th scope=\"col\">Downvote</th>\n          </tr>\n        </thead>\n        <tbody>\n          {\n            props.data.map(response => {\n              return (\n                <tr>\n                  <td>{response.name}</td>\n                  <td>{response.posttitle}</td>\n                  <td>{response.postboby}</td>\n                  <td>{response.upvote}</td>\n                  <td>{response.downvote}</td>\n                </tr>\n              );\n            })\n          }\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default Posts; "]},"metadata":{},"sourceType":"module"}